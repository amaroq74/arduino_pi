.\" libxbee - a C library to aid the use of Digi's Series 1 XBee modules
.\"           running in API mode (AP=2).
.\"
.\" Copyright (C) 2009  Attie Grande (attie@attie.co.uk)
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <http://www.gnu.org/licenses/>.
.TH XBEE_CON 3  2010-06-24 "GNU" "Linux Programmer's Manual"
.SH NAME
xbee_con
.SH SYNOPSIS
.B #include <xbee.h>
.ad b
.SH DESCRIPTION
This is the connection structure. If you would like to use more advanced features of libxbee such as callback functions, you must configure them here.
.sp
.in +4n
.nf
struct xbee_con {
  /* general connection configuration options */
  unsigned int  atQueue;          /* queues AT commands until AC is sent */
  unsigned int  txDisableACK;
  unsigned int  txBroadcastPAN;   /* broadcasts to PAN */
  unsigned int  waitforACK;       /* waits for the ACK or NAK after transmission */
  unsigned char ACKstatus;        /* 255 = waiting, 0 = success, 1 = no ack, 2 = cca fail, 3 = purged */

  /* callback options */
  void *customData;               /* can be used to store data related to this connection */
  void (*callback)(xbee_con*,xbee_pkt*); /* callback function */
  
  unsigned int  destroySelf;      /* if set, the callback thread will destroy the connection
                                     after all of the packets have been processed */
  unsigned int  noFreeAfterCB;    /* prevents libxbee from free'ing the packet after the callback has completed */
};
typedef struct xbee_con xbee_con;
.fi
.in
.sp
Most of these fields are fairly self explanatory, however some need attention brought to them
and others need explaining. I will touch on the most important here:
.TP
.B callback
This is a function pointer. If you wish to use callbacks, then you can install your own function here. To disable callbacks, set this to
.BR NULL .
.sp 0
It is not recommended to call
.BR xbee_endcon ()
from within a callback function. Instead see the
.B destroySelf
flag.
.TP
.B noFreeAfterCB
When inside a callback it is sometimes desirable to store the packet somewhere before it is eventually processed. To prevent libxbee from free'ing the packet immediately after the callback completes, set this to TRUE.
.TP
.B customData
This is a
.B void*
allowing you to store custom, connection orientated data. This is easily accessible from within a callback function for example. You are totally responsible for managing any memory here.
.TP
.B destroySelf
This can be used to terminate the connection once all of the packets have been processed.
.SH AUTHOR
Attie Grande <attie@attie.co.uk> 
.SH "SEE ALSO"
.BR libxbee (3),
.BR xbee_newcon (3)
